{"version":3,"sources":["api.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["API_URL","api","Api","_classCallCheck","this","_createClass","key","value","axios","get","headers","Content-Type","todo","post","todoId","put","delete","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","TodoList","_Component","props","_this","_possibleConstructorReturn","_getPrototypeOf","handleCompleteTodo","_ref","_asyncToGenerator","_callee","response","updatedTodo","todos","_context","completed","updateTodo","id","data","map","t","setState","_x","apply","arguments","handleAddTodo","_callee2","newTodo","_context2","title","newTodoTitle","description","newTodoDescription","createTodo","concat","_toConsumableArray","handleUpdateTodo","_ref3","_callee3","_context3","editingId","editingTitle","editingDescription","_x2","handleDeleteTodo","_ref4","_callee4","_context4","deleteTodo","filter","_x3","_inherits","_this2","getAllTodos","_this3","React","createElement","className","onChange","e","target","placeholder","onClick","checked","Fragment","style","textDecoration","color","Component","App","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.8d3d7298.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\n// Definiera URL:en\r\nconst API_URL = 'http://192.168.99.100:8080/api/v1/todos';\r\n\r\nclass Api {\r\n  // Hämta alla todos från\r\n  getAllTodos() {\r\n    return axios.get(API_URL, { headers: { 'Content-Type': 'application/json' } });\r\n  }\r\n\r\n  // Skapa en ny todo genom att skicka en POST-begäran till API:et\r\n  createTodo(todo) {\r\n    return axios.post(API_URL, todo, { headers: { 'Content-Type': 'application/json' } });\r\n  }\r\n\r\n  // Hämta en specifik todo baserat på dess id\r\n  getTodoById(todoId) {\r\n    return axios.get(API_URL + '/' + todoId);\r\n  }\r\n\r\n  // Uppdatera en specifik todo baserat på dess id\r\n  updateTodo(todoId, todo) {\r\n    return axios.put(API_URL + '/' + todoId, todo);\r\n  }\r\n\r\n  // Radera en specifik todo baserat på dess id\r\n  deleteTodo(todoId) {\r\n    return axios.delete(API_URL + '/' + todoId);\r\n  }\r\n}\r\n\r\n// Exportera en instans av Api-klassen så att den kan användas i andra delar av applikationen\r\nexport default new Api();","import React, { Component } from 'react';\r\nimport Api from '../api';\r\n\r\nclass TodoList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      todos: [],\r\n      newTodoTitle: '',\r\n      newTodoDescription: '',\r\n      editingId: null,\r\n      editingTitle: '',\r\n      editingDescription: ''\r\n    };\r\n  }\r\n\r\n  // Funktion för att markera en Todo som slutförd eller ej slutförd\r\n  handleCompleteTodo = async (todo) => {\r\n    todo.completed = !todo.completed;\r\n    const response = await Api.updateTodo(todo.id, todo);\r\n    const updatedTodo = response.data;\r\n    const todos = this.state.todos.map(t => t.id === todo.id ? updatedTodo : t);\r\n    this.setState({ todos });\r\n  }\r\n\r\n  // Funktion för att lägga till en ny Todo\r\n  handleAddTodo = async () => {\r\n    const newTodo = {\r\n      title: this.state.newTodoTitle,\r\n      description: this.state.newTodoDescription,\r\n      completed: false\r\n    };\r\n    const response = await Api.createTodo(newTodo);\r\n    const todo = response.data;\r\n    this.setState({\r\n      todos: [...this.state.todos, todo],\r\n      newTodoTitle: '',\r\n      newTodoDescription: ''\r\n    });\r\n  }\r\n\r\n  // Funktion för att uppdatera en befintlig Todo\r\n  handleUpdateTodo = async (todo) => {\r\n    if (this.state.editingId === todo.id) {\r\n      todo.title = this.state.editingTitle;\r\n      todo.description = this.state.editingDescription;\r\n      const response = await Api.updateTodo(todo.id, todo);\r\n      const updatedTodo = response.data;\r\n      const todos = this.state.todos.map(t => t.id === todo.id ? updatedTodo : t);\r\n      this.setState({ todos, editingId: null });\r\n    } else {\r\n      this.setState({ editingId: todo.id, editingTitle: todo.title, editingDescription: todo.description });\r\n    }\r\n  }\r\n\r\n  // Funktion för att radera en befintlig Todo\r\n  handleDeleteTodo = async (id) => {\r\n    await Api.deleteTodo(id);\r\n    const todos = this.state.todos.filter(t => t.id !== id);\r\n    this.setState({ todos });\r\n  }\r\n\r\n  // Funktion för att hämta alla Todos när komponenten har monterats\r\n  componentDidMount() {\r\n    Api.getAllTodos().then(response => {\r\n      this.setState({ todos: response.data });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container mt-4\">\r\n        <h1 className=\"mb-4\">Todo List</h1>\r\n        <div className=\"mb-4\">\r\n          <input\r\n            value={this.state.newTodoTitle}\r\n            onChange={e => this.setState({ newTodoTitle: e.target.value })}\r\n            placeholder=\"Ny Todo-titel\"\r\n            className=\"form-control mb-2\"\r\n          />\r\n          <input\r\n            value={this.state.newTodoDescription}\r\n            onChange={e => this.setState({ newTodoDescription: e.target.value })}\r\n            placeholder=\"Ny Todo-beskrivning\"\r\n            className=\"form-control mb-2\"\r\n          />\r\n          <button onClick={this.handleAddTodo} className=\"btn btn-primary\">Lägg till Todo</button>\r\n        </div>\r\n\r\n        <ul className=\"list-group\">\r\n          {this.state.todos.map(todo =>\r\n            <li key={todo.id} className=\"list-group-item\">\r\n              <div className=\"d-flex align-items-center\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={todo.completed}\r\n                  onChange={() => this.handleCompleteTodo(todo)}\r\n                  className=\"mr-2\"\r\n                />\r\n                {this.state.editingId === todo.id ? (\r\n                  <>\r\n                    <input\r\n                      value={this.state.editingTitle}\r\n                      onChange={e => this.setState({ editingTitle: e.target.value })}\r\n                      className=\"form-control mb-2 mr-sm-2\"\r\n                    />\r\n                    <input\r\n                      value={this.state.editingDescription}\r\n                      onChange={e => this.setState({ editingDescription: e.target.value })}\r\n                      className=\"form-control mb-2 mr-sm-2\"\r\n                    />\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <div className=\"flex-grow-1\" style={{ textDecoration: todo.completed ? 'line-through' : 'none', color: todo.completed ? 'gray' : 'black' }}>\r\n                      <strong>{todo.title}</strong>\r\n                      <br />\r\n                      {todo.description}\r\n                    </div>\r\n                  </>\r\n                )}\r\n                <button onClick={() => this.handleUpdateTodo(todo)} className=\"btn btn-success btn-sm ml-2\">\r\n                  {this.state.editingId === todo.id ? 'Spara' : 'Redigera'}\r\n                </button>\r\n                <button onClick={() => this.handleDeleteTodo(todo.id)} className=\"btn btn-danger btn-sm ml-2\">Radera</button>\r\n              </div>\r\n            </li>\r\n          )}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TodoList;","// Importera React och CSS-filen\nimport React from 'react';\nimport './App.css';\n\n// Importera TodoList-komponenten\nimport TodoList from './components/TodoList';\n\n// Huvudkomponenten i din app\nfunction App() {\n  // Returnera TodoList-komponenten innesluten i en div med klassen \"App\"\n  return (\n    <div className=\"App\">\n      <TodoList />\n    </div>\n  );\n}\n\n// Exportera App-komponenten så att den kan användas i andra delar av applikationen\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import 'bootstrap/dist/css/bootstrap.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}